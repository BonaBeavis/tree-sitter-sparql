==================
Blank node labels
==================

SELECT * {
  _:s :p :o
}

---

(unit
  (select_query
    (select_clause) 
    (where_clause
      (group_graph_pattern
        (triples_block 
          (triples_same_subject_path 
            (blank_node_label) 
            (property_list_path 
              (path_element (prefixed_name (pn_local)))
              (object_list_path (prefixed_name (pn_local))))))))))

=====================
Group graph patterns
=====================

SELECT * {
  ?s ?p ?o .
  ?s ?p ?o
  { ?s ?p ?o }
  { ?s ?p ?o }
}

---

(unit 
  (select_query 
    (select_clause) 
    (where_clause 
      (group_graph_pattern
        (triples_block
          (triples_same_subject_path
            (var)
            (property_list_path 
              (var) 
              (object_list_path (var))))
          (triples_block
            (triples_same_subject_path
              (var)
              (property_list_path
                (var)
                (object_list_path (var))))))
        (group_or_union_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var) 
                (property_list_path
                  (var)
                  (object_list_path (var)))))))
        (group_or_union_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var))))))))))) 

====================
Empty Group Pattern
====================

SELECT * {}

---

(unit
  (select_query
    (select_clause)
    (where_clause (group_graph_pattern))))

=======
Filter
=======

SELECT * {
  ?s ?p ?o
  FILTER REGEX(?s, 'Foo')
}

---

(unit
  (select_query
    (select_clause)
    (where_clause
      (group_graph_pattern
        (triples_block
          (triples_same_subject_path
            (var)
            (property_list_path
              (var)
              (object_list_path (var)))))
          (filter
            (regex_expression
              (var)
              (rdf_literal (string_literal1))))))))

=================
Optional pattern
=================

SELECT * {
  {} OPTIONAL { ?s ?p ?o }
  OPTIONAL { ?s ?p ?o }

}

---

(unit 
  (select_query
    (select_clause)
    (where_clause
      (group_graph_pattern
        (group_or_union_graph_pattern (group_graph_pattern))
        (optional_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var)))))))
        (optional_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var)))))))))))


============================
Optional pattern constraint
============================

SELECT * {
  OPTIONAL { 
    ?s ?p ?o
    FILTER (?s < 10)
  }
}

---

(unit 
  (select_query
    (select_clause)
    (where_clause
      (group_graph_pattern
        (optional_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var)))))
            (filter
              (bracketted_expression
                (binary_expression
                  (var)
                  (integer))))))))))

======================
Matching alternatives
======================

SELECT * {
  { ?s ?p ?o }
  UNION
  { ?s ?p ?o }
}

---

(unit
  (select_query
    (select_clause)
    (where_clause
      (group_graph_pattern
        (group_or_union_graph_pattern
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var))))))
          (group_graph_pattern
            (triples_block
              (triples_same_subject_path
                (var)
                (property_list_path
                  (var)
                  (object_list_path (var)))))))))))

=========
Negation
=========

SELECT * {
  ?s ?p ?o
  FILTER NOT EXISTS { ?s ?p ?o }
  MINUS { ?s ?p ?o }
}

---

(unit 
  (select_query 
    (select_clause)
    (where_clause
      (group_graph_pattern
        (triples_block
          (triples_same_subject_path (var)
            (property_list_path (var)
              (object_list_path (var)))))
        (filter
          (not_exists_func
            (group_graph_pattern
              (triples_block
                (triples_same_subject_path (var)
                  (property_list_path (var)
                    (object_list_path (var))))))))
      (minus_graph_pattern
        (group_graph_pattern
          (triples_block
            (triples_same_subject_path (var)
              (property_list_path (var)
                (object_list_path (var)))))))))))

